@using System.Web.UI.WebControls;
@model Core.Erp.Info.RRHH.ro_empleado_novedad_Info
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_empleado_novedad_det";
        settings.CallbackRouteValues = new { Controller = "EmpleadoNovedad", Action = "GridViewPartial_empleado_novedad_det"};
        settings.KeyFieldName = "Secuencia";
        settings.Width = Unit.Percentage(100);

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "EmpleadoNovedad", Action = "EditingAddNew", Area = "RRHH" };
        //settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "EmpleadoNovedad", Action = "EditingUpdate", Area = "RRHH" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "EmpleadoNovedad", Action = "EditingDelete", Area = "RRHH" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Funcion para inicializar fila al presionar nuevo

        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["FechaPago"] = DateTime.Now;

        };
        settings.Columns.Add(column =>
        {
            column.FieldName = "ru_descripcion";
            column.Caption = "Rubro";
            column.Width = Unit.Percentage(30);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdRubro";
            column.Caption = "ru_descripcion";
            column.Width = Unit.Percentage(35);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbRubro_EmpNov", DataBinder.Eval(c.DataItem, "IdRubro"));
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CantidadHoras";
            column.Caption = "Cantidad Horas";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                sp.ClientSideEvents.ValueChanged = "function(s, e){ CalcularValorTotalHoras();}";
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "FechaPago";
            column.Caption = "Fecha pago";
            column.Width = Unit.Percentage(10);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Valor";
            column.Caption = "$Valor";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);

            });
        });        
        settings.Columns.Add(column =>
        {
            column.FieldName = "Observacion";
            column.Caption = "Descripción";
            column.Width = Unit.Percentage(30);
            column.EditorProperties().TextBox(sp =>
            {
                sp.Width = Unit.Percentage(100);

            });
        });
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";

    });

}
@grid.Bind(Model.lst_novedad_det).GetHtml()

<script type="text/javascript">
    function CalcularValorTotalHoras(s, e) {
        var datos = {
            IdEmpleado: IdEmpleado.GetValue(),
            IdRubro: IdRubro.GetValue(),
            CantidadHoras: GridViewPartial_empleado_novedad_det.GetEditor('CantidadHoras').GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("CalcularValorTotalHoras", "EmpleadoNovedad", new { Area = "RRHH" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridViewPartial_empleado_novedad_det.GetEditor('Valor').SetValue(data);
            },
            error: function (error) {
            }
        });
    };
</script>